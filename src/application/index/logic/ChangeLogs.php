<?php
 namespace app\index\logic; use app\index\model\Setting; use app\index\service\RequestContext; use think\Debug; use think\Db; use think\Log; use think\Request; use think\Session; use think\Url; class ChangeLogs extends Base { const CHANGE_LOG_POINT_TYPE = 1; const CHANGE_LOG_INTERVAL_TYPE = 2; public static $changeLogTypeDefs = array(); const CHANGE_LOG_ALL_CATEGORY = 0; const CHANGE_LOG_FUND_MANAGE_BUSINESS_CATEGORY = 1; const CHANGE_LOG_FUND_MANAGE_TAX_CATEGORY = 2; const CHANGE_LOG_FUND_MANAGE_FILING_CATEGORY = 3; const CHANGE_LOG_FUND_MANAGE_REPORT_CATEGORY = 4; const CHANGE_LOG_FUND_MANAGE_FINANCE_REPORT_CATEGORY = 5; const CHANGE_LOG_FUND_MANAGE_VALUATION_REPORT_CATEGORY = 6; public static $changeLogCategoryDefs = array(self::CHANGE_LOG_FUND_MANAGE_BUSINESS_CATEGORY => "\xe5\237\xba\351\x87\x91\xe7\xae\241\347\x90\x86\x2d\345\xb7\xa5\345\225\x86", self::CHANGE_LOG_FUND_MANAGE_TAX_CATEGORY => "\xe5\x9f\xba\xe9\x87\x91\347\256\241\xe7\x90\206\x2d\xe7\xa8\x8e\345\212\241", self::CHANGE_LOG_FUND_MANAGE_FILING_CATEGORY => "\xe5\237\272\xe9\x87\x91\xe7\xae\241\xe7\x90\x86\x2d\xe5\244\x87\xe6\241\x88\xe7\273\xb4\xe6\x8a\244", self::CHANGE_LOG_FUND_MANAGE_REPORT_CATEGORY => "\xe5\x9f\xba\xe9\207\x91\xe7\xae\xa1\xe7\220\206\x2d\xe6\212\xa5\345\x91\x8a", self::CHANGE_LOG_FUND_MANAGE_FINANCE_REPORT_CATEGORY => "\xe5\x9f\272\351\207\221\xe7\xae\241\xe7\220\x86\55\350\xb4\xa2\xe5\212\xa1\xe6\x8a\xa5\xe8\241\250", self::CHANGE_LOG_FUND_MANAGE_VALUATION_REPORT_CATEGORY => "\xe5\237\xba\351\x87\x91\347\xae\241\xe7\220\206\x2d\xe4\xbc\xb0\xe5\x80\xbc\346\x8a\xa5\350\241\250"); public static $changeLogCategoryTypeDefs = array(self::CHANGE_LOG_FUND_MANAGE_BUSINESS_CATEGORY => self::CHANGE_LOG_POINT_TYPE, self::CHANGE_LOG_FUND_MANAGE_TAX_CATEGORY => self::CHANGE_LOG_INTERVAL_TYPE, self::CHANGE_LOG_FUND_MANAGE_FILING_CATEGORY => self::CHANGE_LOG_INTERVAL_TYPE, self::CHANGE_LOG_FUND_MANAGE_REPORT_CATEGORY => self::CHANGE_LOG_INTERVAL_TYPE, self::CHANGE_LOG_FUND_MANAGE_FINANCE_REPORT_CATEGORY => self::CHANGE_LOG_INTERVAL_TYPE, self::CHANGE_LOG_FUND_MANAGE_VALUATION_REPORT_CATEGORY => self::CHANGE_LOG_INTERVAL_TYPE); protected function __construct() { parent::__construct(); } public function load($externalId, $category = \app\index\logic\ChangeLogs::CHANGE_LOG_ALL_CATEGORY, $search = array(), $page = 1, $rows = DEFAULT_PAGE_ROWS, $sort = "\x69\x64", $order = "\144\x65\163\143") { goto vGmB3; nMDf3: mzgjt: goto NFt9w; NFt9w: $totalCount = Db::table("\x63\150\x61\x6e\x67\145\137\x6c\x6f\x67\163")->where($conditions)->count(); goto kKf7t; Y4Bul: if (!$category) { goto mzgjt; } goto KN_7V; eKWaU: goto AMr1V; goto du8CP; vGmB3: $limit = ($page - 1) * $rows . "\x2c" . $rows; goto BXzjh; BXzjh: if ($sort == "\151\144") { goto KrF5F; } goto Mutea; nUvAo: $order = "\151\x64\x20" . $order; goto lgWrR; du8CP: KrF5F: goto nUvAo; Mutea: $order = "\151\144\40\x64\x65\x73\143"; goto eKWaU; kKf7t: $records = Db::table("\143\x68\x61\156\x67\x65\x5f\154\157\147\163")->where($conditions)->limit($limit)->order($order)->field(true)->select(); goto yk3aq; lgWrR: AMr1V: goto p0h6r; p0h6r: $conditions = ["\145\x78\164\145\162\x6e\x61\x6c\x5f\151\144" => $externalId]; goto Y4Bul; KN_7V: $conditions["\x63\x61\164\145\x67\157\x72\x79"] = $category; goto nMDf3; yk3aq: return ["\x74\x6f\x74\x61\x6c" => $totalCount, "\x72\157\x77\163" => $records]; goto Lvj94; Lvj94: } public function add($externalId, $category, $infos) { goto LR7y2; q0iQU: if (empty($infos["\x61\x74\x74\141\143\x68\x65\x73"])) { goto g1VlL; } goto IRquy; sjePB: $model->save(); goto w5oat; LR7y2: $model = model("\103\150\x61\156\x67\x65\x4c\157\x67\163"); goto D5O7A; eaOKb: g1VlL: goto IVYcz; IVYcz: return true; goto N54wJ; w5oat: $id = $model->id; goto q0iQU; IRquy: Upload::I()->relateAttaches($infos["\x61\x74\x74\x61\x63\x68\x65\163"], $id); goto eaOKb; D5O7A: $model->data(["\x65\170\x74\145\162\156\x61\154\137\x69\x64" => $externalId, "\x63\x61\164\145\147\x6f\162\171" => $category, "\x63\150\141\156\147\145\x5f\x64\141\x74\x65" => !emptyInArray($infos, "\143\150\x61\x6e\147\x65\x5f\144\141\164\145") ? $infos["\x63\150\141\156\x67\145\x5f\144\141\x74\x65"] : Defs::DEFAULT_DB_DATE_VALUE, "\146\162\157\155\137\x64\141\164\145" => !emptyInArray($infos, "\x66\x72\157\x6d\x5f\144\141\164\x65") ? $infos["\146\x72\x6f\155\137\x64\141\164\145"] : Defs::DEFAULT_DB_DATE_VALUE, "\145\156\144\x5f\144\x61\x74\145" => !emptyInArray($infos, "\145\156\x64\137\x64\x61\164\145") ? $infos["\x65\156\144\x5f\144\141\164\145"] : Defs::DEFAULT_DB_DATE_VALUE, "\144\145\x73\143" => !emptyInArray($infos, "\144\x65\163\143") ? $infos["\x64\145\x73\x63"] : '', "\145\156\164\145\x72\x65\x64" => Db::raw("\156\157\x77\50\51")]); goto sjePB; N54wJ: } public function edit($id, $infos) { goto zoM0s; Zsdna: if (!empty($attachmentIds)) { goto IgEfT; } goto vYSG4; BMg4h: YMgid: goto dxZ3h; zoM0s: $model = \app\index\model\ChangeLogs::get($id); goto Ifqz1; S9av2: return true; goto I87ns; jK0YQ: st1d4: goto S9av2; t9lrx: foreach ($attachmentIds as $attachmentId) { $uploadLogic->relateAttaches($attachmentId, $id); WArB0: } goto jK0YQ; RHnOq: $uploadLogic = \app\index\logic\Upload::newObj(); goto e5_r7; X4GyR: return false; goto BMg4h; e5_r7: $attaches = !emptyInArray($infos, "\141\x74\x74\141\143\x68\145\163") ? $infos["\141\164\164\x61\143\x68\x65\163"] : ''; goto cZuD5; vYSG4: return true; goto r1c7J; r1c7J: IgEfT: goto t9lrx; dxZ3h: $model->data(["\143\150\141\x6e\147\x65\x5f\x64\141\164\145" => !emptyInArray($infos, "\143\150\x61\x6e\x67\145\137\x64\x61\164\145") ? $infos["\x63\150\x61\156\x67\145\137\x64\x61\164\145"] : Defs::DEFAULT_DB_DATE_VALUE, "\146\x72\157\x6d\137\144\141\x74\x65" => !emptyInArray($infos, "\146\162\157\x6d\x5f\x64\x61\x74\x65") ? $infos["\146\162\157\x6d\x5f\144\141\164\145"] : Defs::DEFAULT_DB_DATE_VALUE, "\145\156\144\x5f\x64\141\x74\x65" => !emptyInArray($infos, "\x65\x6e\144\x5f\144\141\x74\x65") ? $infos["\x65\x6e\144\x5f\x64\x61\x74\145"] : Defs::DEFAULT_DB_DATE_VALUE, "\144\145\163\143" => !emptyInArray($infos, "\144\x65\x73\x63") ? $infos["\144\x65\x73\x63"] : '']); goto IFBEp; cZuD5: $attachmentIds = explode("\54", $attaches); goto Zsdna; IFBEp: $model->save(); goto RHnOq; Ifqz1: if ($model) { goto YMgid; } goto X4GyR; I87ns: } public function delete($id) { goto jfT3X; oC4Ja: $uploadLogic = \app\index\logic\Upload::newObj(); goto jTJ1E; Mnoec: WkMD1: goto oC4Ja; Op2K2: return true; goto uMmAi; JX3Ym: if (!$model) { goto WkMD1; } goto gWM5h; jTJ1E: $uploadLogic->deleteAttaches($id, \app\index\logic\Upload::ATTACH_FUND_CHANGE_LOGS); goto Op2K2; jfT3X: $model = \app\index\model\ChangeLogs::get($id); goto JX3Ym; gWM5h: $model->delete(); goto Mnoec; uMmAi: } public function getInfos($id) { goto cNZ_n; cNZ_n: $infos = Db::table("\143\150\x61\x6e\147\x65\137\x6c\x6f\147\163")->where("\x69\144", $id)->field(true)->find(); goto mbpSZ; ibRw6: XR99U: goto pqqF7; c6SlI: return false; goto ibRw6; pqqF7: return $infos; goto qOiGf; mbpSZ: if ($infos) { goto XR99U; } goto c6SlI; qOiGf: } }
